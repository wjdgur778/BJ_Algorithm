#include<iostream>
#include<vector>
#include<string>
using namespace std;

//N개의 "a"와 M개의 "z"로 이루어진 사전 ( 알파벳 순서대로 수록 )
//친구는 K번째 문자열을 찾고 싶다.
/*
첫째 줄에 N, M, K가 순서대로 주어진다. N과 M은 100보다 작거나 같은 자연수이고, 
K는 1,000,000,000보다 작거나 같은 자연수이다.
*/

//N+M combination N 에서 K 번째를 찾아라
//이때 K는 10억..
//10억 번을 모두 할수 있나? -> 10초.. 불가능
// O(nlogn)을 찾자 => 

//  a a a a a z z z z z z
//  a a a a z a z z z z z
// 1101 1100 0101
// 1011 0101101
/*
0000 0000 0000 0000
1. 수가 적은 쪽을 고른다고 가정

90 50

140 combination 50

3 7
10 combination 3

8+7+6+5+4+3+2+1
    7+6+5+4+3+2+1
		6+5+4+3+2+1
			5+4+3+2+1
				4+3+2+1
					3+2+1
						2+1
							1 
    7+6+5+4+3+2+1
		6+5+4+3+2+1
			5+4+3+2+1
				4+3+2+1
					3+2+1
						2+1
							1 

M +1 ~ 

1110000000
1101000000
1100100000
1100010000
1100001000
1100000100
1100000010
1100000001

1011000000
	*
	*
	*
	*

*/
int N;
int M;
int K;
int x;
int n;
vector<vector<int>>dp(102,vector<int>(102,1));
int main() {
	//cin >> N >> M >> K;
	//N과 M의 대소비교는 나중에 생각하자
	// N과 M중 큰놈 = x
	// 합 해나갈 기준 n;
	

	int tmp = n;
	for (int i = 2; i <= 10; i++) {
		for (int j = 2; j <= 10; j++) {
			dp[i][j] = dp[i][j-1] + dp[i-1][j];
			cout << dp[i][j] << " ";
		}
		cout << endl;
	}
	/*
	1 1 1 1 1 1 1 1 1 1
	1 2 3 4 5 6 7 8 9 10
	1 3 6 10 15 21
	1 4 10 20 35 

	*/


	return 0;
}